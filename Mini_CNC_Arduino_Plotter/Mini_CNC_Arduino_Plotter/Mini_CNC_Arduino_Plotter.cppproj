<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">
  <PropertyGroup>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectVersion>7.0</ProjectVersion>
    <ToolchainName>com.Atmel.AVRGCC8.CPP</ToolchainName>
    <ProjectGuid>{dfbe8fc8-bb97-48cf-a5a3-30b7f324cf81}</ProjectGuid>
    <avrdevice>atmega644p</avrdevice>
    <avrdeviceseries>none</avrdeviceseries>
    <OutputType>Executable</OutputType>
    <Language>CPP</Language>
    <OutputFileName>$(MSBuildProjectName)</OutputFileName>
    <OutputFileExtension>.elf</OutputFileExtension>
    <OutputDirectory>$(MSBuildProjectDirectory)\$(Configuration)</OutputDirectory>
    <AssemblyName>Mini_CNC_Arduino_Plotter</AssemblyName>
    <Name>Mini_CNC_Arduino_Plotter</Name>
    <RootNamespace>Mini_CNC_Arduino_Plotter</RootNamespace>
    <ToolchainFlavour>Native</ToolchainFlavour>
    <KeepTimersRunning>true</KeepTimersRunning>
    <OverrideVtor>false</OverrideVtor>
    <OverrideVtorValue>
    </OverrideVtorValue>
    <eraseonlaunchrule>0</eraseonlaunchrule>
    <ProgFlashFromRam>true</ProgFlashFromRam>
    <RamSnippetAddress>0x20000000</RamSnippetAddress>
    <CacheFlash>true</CacheFlash>
    <UncachedRange />
    <BootSegment>0</BootSegment>
    <AsfFrameworkConfig>
      <framework-data>
        <options />
        <configurations />
        <files />
        <documentation help="" />
        <offline-documentation help="" />
        <dependencies>
          <content-extension eid="atmel.asf" uuidref="Atmel.ASF" version="3.34.1" />
        </dependencies>
      </framework-data>
    </AsfFrameworkConfig>
    <preserveEEPROM>true</preserveEEPROM>
    <ResetRule>0</ResetRule>
    <EraseKey />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <ToolchainSettings>
      <AvrGccCpp>
  <avrgcc.common.outputfiles.hex>True</avrgcc.common.outputfiles.hex>
  <avrgcc.common.outputfiles.lss>True</avrgcc.common.outputfiles.lss>
  <avrgcc.common.outputfiles.eep>True</avrgcc.common.outputfiles.eep>
  <avrgcc.common.outputfiles.srec>True</avrgcc.common.outputfiles.srec>
  <avrgcc.common.outputfiles.usersignatures>False</avrgcc.common.outputfiles.usersignatures>
  <avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>
  <avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>
  <avrgcc.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>__AVR_ATmega644p__</Value>
      <Value>__AVR_ATmega644P__</Value>
      <Value>ARDUINO=10805</Value>
      <Value>ARDUINO_MAIN</Value>
      <Value>F_CPU=14745600L</Value>
      <Value>__AVR__</Value>
      <Value>ARDUINO_AVR_AVRNETIO_AVRNETIO_AVR_ANIO644P</Value>
      <Value>ARDUINO_ARCH_AVR</Value>
    </ListValues>
  </avrgcc.compiler.symbols.DefSymbols>
  <avrgcc.compiler.directories.IncludePaths>
    <ListValues>
      <Value>../../../Mini_CNC_Arduino_Plotter</Value>
      <Value>D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Servo</Value>
      <Value>D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Stepper</Value>
      <Value>../_micro-api/libraries/Stepper</Value>
      <Value>../_micro-api/libraries/Servo</Value>
      <Value>C:/Program Files (x86)/Arduino/libraries</Value>
      <Value>C:/Users/Serg/Documents/Arduino/libraries</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/libraries</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio/avr-libc</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/variants/avrnetio</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include/avr</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.8.1/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.2/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.3/include</Value>
    </ListValues>
  </avrgcc.compiler.directories.IncludePaths>
  <avrgcc.compiler.optimization.level>Optimize (-O1)</avrgcc.compiler.optimization.level>
  <avrgcc.compiler.optimization.PackStructureMembers>True</avrgcc.compiler.optimization.PackStructureMembers>
  <avrgcc.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcc.compiler.optimization.AllocateBytesNeededForEnum>
  <avrgcc.compiler.optimization.DebugLevel>Default (-g2)</avrgcc.compiler.optimization.DebugLevel>
  <avrgcc.compiler.warnings.AllWarnings>True</avrgcc.compiler.warnings.AllWarnings>
  <avrgcc.compiler.miscellaneous.OtherFlags />
  <avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>
  <avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>
  <avrgcccpp.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>__AVR_ATmega644p__</Value>
      <Value>__AVR_ATmega644P__</Value>
      <Value>ARDUINO=10805</Value>
      <Value>ARDUINO_MAIN</Value>
      <Value>F_CPU=14745600L</Value>
      <Value>__AVR__</Value>
      <Value>ARDUINO_AVR_AVRNETIO_AVRNETIO_AVR_ANIO644P</Value>
      <Value>ARDUINO_ARCH_AVR</Value>
    </ListValues>
  </avrgcccpp.compiler.symbols.DefSymbols>
  <avrgcccpp.compiler.directories.IncludePaths>
    <ListValues>
      <Value>../../../Mini_CNC_Arduino_Plotter</Value>
      <Value>D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Servo</Value>
      <Value>D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Stepper</Value>
      <Value>../_micro-api/libraries/Stepper</Value>
      <Value>../_micro-api/libraries/Servo</Value>
      <Value>C:/Program Files (x86)/Arduino/libraries</Value>
      <Value>C:/Users/Serg/Documents/Arduino/libraries</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/libraries</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio/avr-libc</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/variants/avrnetio</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include/avr</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.8.1/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.2/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.3/include</Value>
    </ListValues>
  </avrgcccpp.compiler.directories.IncludePaths>
  <avrgcccpp.compiler.optimization.level>Optimize (-O1)</avrgcccpp.compiler.optimization.level>
  <avrgcccpp.compiler.optimization.PackStructureMembers>True</avrgcccpp.compiler.optimization.PackStructureMembers>
  <avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>
  <avrgcccpp.compiler.optimization.DebugLevel>Default (-g2)</avrgcccpp.compiler.optimization.DebugLevel>
  <avrgcccpp.compiler.warnings.AllWarnings>True</avrgcccpp.compiler.warnings.AllWarnings>
  <avrgcccpp.assembler.debugging.DebugLevel>Default (-Wa,-g)</avrgcccpp.assembler.debugging.DebugLevel>
</AvrGccCpp>
    </ToolchainSettings>
    <VMSETTING_IncludePaths>../../../Mini_CNC_Arduino_Plotter;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/libraries/Servo;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/libraries/Stepper;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/libraries;C:/Users/Serg/Documents/Arduino/libraries;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/arduino/libraries;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/arduino/cores/arduino;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/arduino/variants/standard;d:/programmwork/загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/tools/avr/avr/include/;d:/programmwork/загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/tools/avr/avr/include/avr/;d:/programmwork/загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/tools/avr/avr/;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/avrnetio/libraries;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/avrnetio/cores/avrnetio;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/avrnetio/variants/avrnetio;../_micro-api/libraries/Servo;../_micro-api/libraries/Stepper;C:/Program Files (x86)/Arduino/libraries;C:/Program Files (x86)/Arduino/hardware/arduino/avr/libraries;C:/Program Files (x86)/Arduino/hardware/arduino/avr/cores/arduino;C:/Program Files (x86)/Arduino/hardware/arduino/avr/variants/yun;C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include;C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include/avr;C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.8.1/include;C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.2/include;C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.3/include;C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/libraries;C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio;C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/variants/avrnetio;C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio/avr-libc;D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Servo;D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Stepper;</VMSETTING_IncludePaths>
    <VisualMicroSettings>
      <VisualMicroSettings>
        <arduino.build.auto_discover_includes>0</arduino.build.auto_discover_includes>
        <arduino.build.skip_library_file_if_exists_in_project>0</arduino.build.skip_library_file_if_exists_in_project>
        <arduino.board.name>avrnetio_avrnetio_avr_anio644p</arduino.board.name>
        <arduino.board.desc>avrnetio w/ atmega644p (optiboot.c)</arduino.board.desc>
        <arduino.board.property_bag>name=avrnetio w/ atmega644p (optiboot.c)
build.mcu=atmega644p
build.f_cpu=16000000L
build.core=avrnetio
build.variant=avrnetio
upload.protocol=arduino
upload.maximum_size=64512
upload.speed=115200
bootloader.path=optiboot
bootloader.file=optiboot_anio644p.hex
bootloader.low_fuses=0xFF
bootloader.high_fuses=0xDE
bootloader.extended_fuses=0xFD
bootloader.unlock_bits=0x0f
bootloader.lock_bits=0x3f
runtime.ide.path=C:\Program Files (x86)\Arduino
runtime.os=windows
build.system.path=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr\system
runtime.ide.version=10805
target_package=avrnetio
target_platform=avr
runtime.hardware.path=C:\Program Files (x86)\Arduino\hardware\avrnetio
originalid=avrnetio_avr_anio644p
intellisense.tools.path={runtime.tools.avr-gcc.path}\
intellisense.include.paths={intellisense.tools.path}avr\include;{intellisense.tools.path}avr\include\avr;{intellisense.tools.path}lib\gcc\avr\4.8.1\include;{intellisense.tools.path}lib\gcc\avr\4.9.2\include;{intellisense.tools.path}lib\gcc\avr\4.9.3\include;
tools.atprogram.cmd.path=%AVRSTUDIO_EXE_PATH%\atbackend\atprogram
tools.atprogram.cmd.setwinpath=true
tools.atprogram.program.params.verbose=-v
tools.atprogram.program.params.quiet=-q
tools.atprogram.program.pattern="{cmd.path}" -d {build.mcu} {program.verbose} {program.extra_params} program -c -f "{build.path}\{build.project_name}.hex"
tools.atprogram.program.xpattern="{cmd.path}" {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f "{build.path}\{build.project_name}.hex"
tools.atprogram.erase.params.verbose=-v
tools.atprogram.erase.params.quiet=-q
tools.atprogram.bootloader.params.verbose=-v
tools.atprogram.bootloader.params.quiet=-q
tools.atprogram.bootloader.pattern="{cmd.path}" -d {build.mcu} {bootloader.verbose}  program -c -f "{runtime.ide.path}\hardware\arduino\avr\bootloaders\{bootloader.file}"
vm.platform.root.path=C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\uyaxdra5.21x\Micro Platforms\arduino16x
version=1.6.20
compiler.warning_flags=-w
compiler.warning_flags.none=-w
compiler.warning_flags.default=
compiler.warning_flags.more=-Wall
compiler.warning_flags.all=-Wall -Wextra
compiler.path={runtime.tools.avr-gcc.path}/bin/
compiler.c.cmd=avr-gcc
compiler.c.flags=-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects
compiler.c.elf.flags={compiler.warning_flags} -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections
compiler.c.elf.cmd=avr-gcc
compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD
compiler.cpp.cmd=avr-g++
compiler.cpp.flags=-c -g -Os {compiler.warning_flags} -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD -flto
compiler.ar.cmd=avr-gcc-ar
compiler.ar.flags=rcs
compiler.objcopy.cmd=avr-objcopy
compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0
compiler.elf2hex.flags=-O ihex -R .eeprom
compiler.elf2hex.cmd=avr-objcopy
compiler.ldflags=
compiler.size.cmd=avr-size
build.extra_flags=
compiler.c.extra_flags=
compiler.c.elf.extra_flags=
compiler.S.extra_flags=
compiler.cpp.extra_flags=
compiler.ar.extra_flags=
compiler.objcopy.eep.extra_flags=
compiler.elf2hex.extra_flags=
recipe.c.o.pattern="{compiler.path}{compiler.c.cmd}" {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"
recipe.cpp.o.pattern="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"
recipe.S.o.pattern="{compiler.path}{compiler.c.cmd}" {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"
archive_file_path={build.path}/{archive_file}
recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}" {compiler.ar.flags} {compiler.ar.extra_flags} "{archive_file_path}" "{object_file}"
recipe.c.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o "{build.path}/{build.project_name}.elf" {object_files} "{build.path}/{archive_file}" "-L{build.path}" -lm
recipe.objcopy.eep.pattern="{compiler.path}{compiler.objcopy.cmd}" {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.eep"
recipe.objcopy.hex.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
recipe.output.tmp_file={build.project_name}.hex
recipe.output.save_file={build.project_name}.{build.variant}.hex
recipe.size.pattern="{compiler.path}{compiler.size.cmd}" -A "{build.path}/{build.project_name}.elf"
recipe.size.regex=^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*
recipe.size.regex.data=^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*
recipe.size.regex.eeprom=^(?:\.eeprom)\s+([0-9]+).*
preproc.includes.flags=-w -x c++ -M -MG -MP
recipe.preproc.includes="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}"
preproc.macros.flags=-w -x c++ -E -CC
recipe.preproc.macros="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{preprocessed_file_path}"
tools.avrdude.path={runtime.tools.avrdude.path}
tools.avrdude.cmd.path={path}/bin/avrdude
tools.avrdude.config.path={path}/etc/avrdude.conf
tools.avrdude.network_cmd={runtime.tools.arduinoOTA.path}/bin/arduinoOTA
tools.avrdude.upload.params.verbose=-v
tools.avrdude.upload.params.quiet=-q -q
tools.avrdude.upload.verify=
tools.avrdude.upload.params.noverify=-V
tools.avrdude.upload.pattern="{cmd.path}" "-C{config.path}" {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} "-P{serial.port}" -b{upload.speed} -D "-Uflash:w:{build.path}/{build.project_name}.hex:i"
tools.avrdude.program.params.verbose=-v
tools.avrdude.program.params.quiet=-q -q
tools.avrdude.program.verify=
tools.avrdude.program.params.noverify=-V
tools.avrdude.program.pattern="{cmd.path}" "-C{config.path}" {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} "-Uflash:w:{build.path}/{build.project_name}.hex:i"
tools.avrdude.erase.params.verbose=-v
tools.avrdude.erase.params.quiet=-q -q
tools.avrdude.erase.pattern="{cmd.path}" "-C{config.path}" {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m
tools.avrdude.bootloader.params.verbose=-v
tools.avrdude.bootloader.params.quiet=-q -q
tools.avrdude.bootloader.pattern="{cmd.path}" "-C{config.path}" {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} "-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i" -Ulock:w:{bootloader.lock_bits}:m
tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}
tools.avrdude.upload.network_pattern="{network_cmd}" -address {serial.port} -port {upload.network.port} -sketch "{build.path}/{build.project_name}.hex" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}
build.usb_manufacturer="Unknown"
build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'
avrisp.name=AVR ISP
avrisp.communication=serial
avrisp.protocol=stk500v1
avrisp.program.protocol=stk500v1
avrisp.program.tool=avrdude
avrisp.program.extra_params=-P{serial.port}
avrispmkii.name=AVRISP mkII
avrispmkii.communication=usb
avrispmkii.protocol=stk500v2
avrispmkii.program.protocol=stk500v2
avrispmkii.program.tool=avrdude
avrispmkii.program.extra_params=-Pusb
usbtinyisp.name=USBtinyISP
usbtinyisp.protocol=usbtiny
usbtinyisp.program.tool=avrdude
usbtinyisp.program.extra_params=
arduinoisp.name=ArduinoISP
arduinoisp.protocol=arduinoisp
arduinoisp.program.tool=avrdude
arduinoisp.program.extra_params=
arduinoisporg.name=ArduinoISP.org
arduinoisporg.protocol=arduinoisporg
arduinoisporg.program.tool=avrdude
arduinoisporg.program.extra_params=
usbasp.name=USBasp
usbasp.communication=usb
usbasp.protocol=usbasp
usbasp.program.protocol=usbasp
usbasp.program.tool=avrdude
usbasp.program.extra_params=-Pusb
parallel.name=Parallel Programmer
parallel.protocol=dapa
parallel.force=true
parallel.program.tool=avrdude
parallel.program.extra_params=-F
arduinoasisp.name=Arduino as ISP
arduinoasisp.communication=serial
arduinoasisp.protocol=stk500v1
arduinoasisp.speed=19200
arduinoasisp.program.protocol=stk500v1
arduinoasisp.program.speed=19200
arduinoasisp.program.tool=avrdude
arduinoasisp.program.extra_params=-P{serial.port} -b{program.speed}
usbGemma.name=Arduino Gemma
usbGemma.protocol=arduinogemma
usbGemma.program.tool=avrdude
usbGemma.program.extra_params=
usbGemma.config.path={runtime.platform.path}/bootloaders/gemma/avrdude.conf
buspirate.name=BusPirate as ISP
buspirate.communication=serial
buspirate.protocol=buspirate
buspirate.program.protocol=buspirate
buspirate.program.tool=avrdude
buspirate.program.extra_params=-P{serial.port}
stk500.name=Atmel STK500 development board
stk500.communication=serial
stk500.protocol=stk500
stk500.program.protocol=stk500
stk500.program.tool=avrdude
stk500.program.extra_params=-P{serial.port}
jtag3isp.name=Atmel JTAGICE3 (ISP mode)
jtag3isp.communication=usb
jtag3isp.protocol=jtag3isp
jtag3isp.program.protocol=jtag3isp
jtag3isp.program.tool=avrdude
jtag3isp.program.extra_params=
jtag3.name=Atmel JTAGICE3 (JTAG mode)
jtag3.communication=usb
jtag3.protocol=jtag3
jtag3.program.protocol=jtag3
jtag3.program.tool=avrdude
jtag3.program.extra_params=-B0.1
atmel_ice.name=Atmel-ICE (AVR)
atmel_ice.communication=usb
atmel_ice.protocol=atmelice_isp
atmel_ice.program.protocol=atmelice_isp
atmel_ice.program.tool=avrdude
atmel_ice.program.extra_params=-Pusb
runtime.tools.arduinoOTA.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.arduinoOTA-1.1.1.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.avrdude.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.avrdude-6.3.0-arduino9.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.avr-gcc.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.avr-gcc-4.9.2-atmel3.5.4-arduino2.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.esptool.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\esptool\0.4.9
runtime.tools.esptool-0.4.9.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\esptool\0.4.9
runtime.tools.mkspiffs.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\mkspiffs\0.1.2
runtime.tools.mkspiffs-0.1.2.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\mkspiffs\0.1.2
runtime.tools.tools-avr.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.xtensa-lx106-elf-gcc.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2
runtime.tools.xtensa-lx106-elf-gcc-1.20.0-26-gb404fb9-2.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2
runtime.vm.boardinfo.id=avrnetio_avrnetio_avr_anio644p
runtime.vm.boardinfo.name=avrnetio_avrnetio_avr_anio644p
runtime.vm.boardinfo.desc=avrnetio w/ atmega644p (optiboot.c)
runtime.vm.boardinfo.src_location=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr
ide.hint=Use installed IDE. Provides built-in hardware, reference/help and libraries.
ide.location.key=Arduino16x
ide.location.ide.winreg=Arduino 1.6.x Application
ide.location.sketchbook.winreg=Arduino 1.6.x Sketchbook
ide.location.sketchbook.preferences=sketchbook.path
ide.default.revision_name=1.9.0
ide.default.version=10800
ide.default.package=arduino
ide.default.platform=avr
ide.multiplatform=true
ide.includes=Arduino.h
ide.exe_name=arduino
ide.recipe.preproc.defines.flags=-w -x c++ -E -dM
ide.platformswithoutpackage=false
ide.includes.fallback=wprogram.h
ide.extension=ino
ide.extension.fallback=pde
ide.versionGTEQ=160
ide.exe=arduino.exe
ide.builder.exe=arduinobuilder.exe
ide.builder.name=Arduino Builder
ide.hosts=atmel
ide.url=http://arduino.cc/en/Main/Software
ide.help.reference.path=reference
ide.help.reference.path2=reference\www.arduino.cc\en\Reference
ide.help.reference.serial=reference\www.arduino.cc\en\Serial
ide.location.preferences.portable={runtime.ide.path}\portable
ide.location.preferences.arduinoData={runtime.sketchbook.path}\ArduinoData
ide.location.preferences=%VM_APPDATA_LOCAL%\arduino15\preferences.txt
ide.location.preferences_fallback=%VM_APPDATA_ROAMING%\arduino15\preferences.txt
ide.location.contributions=%VM_APPDATA_LOCAL%\arduino15
ide.location.contributions_fallback=%VM_APPDATA_ROAMING%\arduino15
ide.contributions.boards.allow=true
ide.contributions.boards.ignore_unless_rewrite_found=true
ide.contributions.libraries.allow=true
ide.contributions.boards.support.urls.wiki=https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls
ide.create_platforms_from_boardsTXT.teensy=build.core
vm.debug=true
software=ARDUINO
ssh.user.name=root
ssh.user.default.password=arduino
ssh.host.wwwfiles.path=/www/sd
build.working_directory={runtime.ide.path}\java\bin
ide.appid=arduino16x
location.sketchbook=C:\Users\Serg\Documents\Arduino
build.core.path=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr\cores\avrnetio
vm.core.include=arduino.h
build.board=AVR_AVRNETIO_AVRNETIO_AVR_ANIO644P
vm.boardsource.path=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr
runtime.platform.path=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr
vm.platformname.name=avr
build.arch=AVR
build.project_name=Mini_CNC_Arduino_Plotter.ino
build.project_path=D:\ProgrammWork\AVR_1\MiniPlotter\Mini_CNC_Arduino_Plotter\Mini_CNC_Arduino_Plotter
sketch_path=D:\ProgrammWork\AVR_1\MiniPlotter\Mini_CNC_Arduino_Plotter\Mini_CNC_Arduino_Plotter
ProjectDir=D:\ProgrammWork\AVR_1\MiniPlotter\Mini_CNC_Arduino_Plotter\Mini_CNC_Arduino_Plotter\
build.path=C:\Users\Serg\AppData\Local\Temp\VMBuilds\Mini_CNC_Arduino_Plotter\yun\Release
builder.noino=false
build.architecture=avr
vmresolved.compiler.path=C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\
vmresolved.tools.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
</arduino.board.property_bag>
        <arduino.build.mcu>atmega644p</arduino.build.mcu>
        <arduino.build.f_cpu>16000000L</arduino.build.f_cpu>
        <arduino.build.core>avrnetio</arduino.build.core>
        <arduino.upload.protocol>arduino</arduino.upload.protocol>
        <arduino.upload.speed>115200</arduino.upload.speed>
        <arduino.upload.maximum_size>64512</arduino.upload.maximum_size>
        <visualmicro.application.name>arduino16x</visualmicro.application.name>
        <visualmicro.package.name>avrnetio</visualmicro.package.name>
        <visualmicro.platform.name>avr</visualmicro.platform.name>
        <arduino.upload.port>COM6</arduino.upload.port>
        <vm.programmer_name>usbasp</vm.programmer_name>
        <vm.upload.useprogrammer>1</vm.upload.useprogrammer>
      </VisualMicroSettings>
    </VisualMicroSettings>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <ToolchainSettings>
      <AvrGccCpp>
  <avrgcc.common.outputfiles.hex>True</avrgcc.common.outputfiles.hex>
  <avrgcc.common.outputfiles.lss>True</avrgcc.common.outputfiles.lss>
  <avrgcc.common.outputfiles.eep>True</avrgcc.common.outputfiles.eep>
  <avrgcc.common.outputfiles.srec>True</avrgcc.common.outputfiles.srec>
  <avrgcc.common.outputfiles.usersignatures>False</avrgcc.common.outputfiles.usersignatures>
  <avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>
  <avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>
  <avrgcc.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>__AVR_ATmega644p__</Value>
      <Value>__AVR_ATmega644P__</Value>
      <Value>ARDUINO=10805</Value>
      <Value>ARDUINO_MAIN</Value>
      <Value>F_CPU=14745600L</Value>
      <Value>__AVR__</Value>
      <Value>ARDUINO_AVR_AVRNETIO_AVRNETIO_AVR_ANIO644P</Value>
      <Value>ARDUINO_ARCH_AVR</Value>
    </ListValues>
  </avrgcc.compiler.symbols.DefSymbols>
  <avrgcc.compiler.directories.IncludePaths>
    <ListValues>
      <Value>../../../Mini_CNC_Arduino_Plotter</Value>
      <Value>D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Servo</Value>
      <Value>D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Stepper</Value>
      <Value>../_micro-api/libraries/Stepper</Value>
      <Value>../_micro-api/libraries/Servo</Value>
      <Value>C:/Program Files (x86)/Arduino/libraries</Value>
      <Value>C:/Users/Serg/Documents/Arduino/libraries</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/libraries</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio/avr-libc</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/variants/avrnetio</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include/avr</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.8.1/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.2/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.3/include</Value>
    </ListValues>
  </avrgcc.compiler.directories.IncludePaths>
  <avrgcc.compiler.optimization.level>Optimize (-O1)</avrgcc.compiler.optimization.level>
  <avrgcc.compiler.optimization.PackStructureMembers>True</avrgcc.compiler.optimization.PackStructureMembers>
  <avrgcc.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcc.compiler.optimization.AllocateBytesNeededForEnum>
  <avrgcc.compiler.optimization.DebugLevel>Default (-g2)</avrgcc.compiler.optimization.DebugLevel>
  <avrgcc.compiler.warnings.AllWarnings>True</avrgcc.compiler.warnings.AllWarnings>
  <avrgcc.compiler.miscellaneous.OtherFlags />
  <avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultCharTypeUnsigned>
  <avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcccpp.compiler.general.ChangeDefaultBitFieldUnsigned>
  <avrgcccpp.compiler.symbols.DefSymbols>
    <ListValues>
      <Value>__AVR_ATmega644p__</Value>
      <Value>__AVR_ATmega644P__</Value>
      <Value>ARDUINO=10805</Value>
      <Value>ARDUINO_MAIN</Value>
      <Value>F_CPU=14745600L</Value>
      <Value>__AVR__</Value>
      <Value>ARDUINO_AVR_AVRNETIO_AVRNETIO_AVR_ANIO644P</Value>
      <Value>ARDUINO_ARCH_AVR</Value>
    </ListValues>
  </avrgcccpp.compiler.symbols.DefSymbols>
  <avrgcccpp.compiler.directories.IncludePaths>
    <ListValues>
      <Value>../../../Mini_CNC_Arduino_Plotter</Value>
      <Value>D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Servo</Value>
      <Value>D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Stepper</Value>
      <Value>../_micro-api/libraries/Stepper</Value>
      <Value>../_micro-api/libraries/Servo</Value>
      <Value>C:/Program Files (x86)/Arduino/libraries</Value>
      <Value>C:/Users/Serg/Documents/Arduino/libraries</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/libraries</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio/avr-libc</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/variants/avrnetio</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include/avr</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.8.1/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.2/include</Value>
      <Value>C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.3/include</Value>
    </ListValues>
  </avrgcccpp.compiler.directories.IncludePaths>
  <avrgcccpp.compiler.optimization.level>Optimize (-O1)</avrgcccpp.compiler.optimization.level>
  <avrgcccpp.compiler.optimization.PackStructureMembers>True</avrgcccpp.compiler.optimization.PackStructureMembers>
  <avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcccpp.compiler.optimization.AllocateBytesNeededForEnum>
  <avrgcccpp.compiler.optimization.DebugLevel>Default (-g2)</avrgcccpp.compiler.optimization.DebugLevel>
  <avrgcccpp.compiler.warnings.AllWarnings>True</avrgcccpp.compiler.warnings.AllWarnings>
  <avrgcccpp.assembler.debugging.DebugLevel>Default (-Wa,-g)</avrgcccpp.assembler.debugging.DebugLevel>
</AvrGccCpp>
    </ToolchainSettings>
    <VMSETTING_IncludePaths>../../../Mini_CNC_Arduino_Plotter;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/libraries/Servo;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/libraries/Stepper;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/libraries;C:/Users/Serg/Documents/Arduino/libraries;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/arduino/libraries;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/arduino/cores/arduino;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/arduino/variants/standard;d:/programmwork/загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/tools/avr/avr/include/;d:/programmwork/загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/tools/avr/avr/include/avr/;d:/programmwork/загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/tools/avr/avr/;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/avrnetio/libraries;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/avrnetio/cores/avrnetio;D:/ProgrammWork/Загрузки/arduino-1.0.4-windows/arduino-1.0.4/hardware/avrnetio/variants/avrnetio;../_micro-api/libraries/Servo;../_micro-api/libraries/Stepper;C:/Program Files (x86)/Arduino/libraries;C:/Program Files (x86)/Arduino/hardware/arduino/avr/libraries;C:/Program Files (x86)/Arduino/hardware/arduino/avr/cores/arduino;C:/Program Files (x86)/Arduino/hardware/arduino/avr/variants/yun;C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include;C:/Program Files (x86)/Arduino/hardware/tools/avr/avr/include/avr;C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.8.1/include;C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.2/include;C:/Program Files (x86)/Arduino/hardware/tools/avr/lib/gcc/avr/4.9.3/include;C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/libraries;C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio;C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/variants/avrnetio;C:/Program Files (x86)/Arduino/hardware/avrnetio/avr/cores/avrnetio/avr-libc;D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Servo;D:/ProgrammWork/AVR_1/MiniPlotter/Mini_CNC_Arduino_Plotter/Mini_CNC_Arduino_Plotter/src/_micro-api/libraries/Stepper;</VMSETTING_IncludePaths>
    <VisualMicroSettings>
      <VisualMicroSettings>
        <arduino.build.auto_discover_includes>0</arduino.build.auto_discover_includes>
        <arduino.build.skip_library_file_if_exists_in_project>0</arduino.build.skip_library_file_if_exists_in_project>
        <arduino.board.name>avrnetio_avrnetio_avr_anio644p</arduino.board.name>
        <arduino.board.desc>avrnetio w/ atmega644p (optiboot.c)</arduino.board.desc>
        <arduino.board.property_bag>name=avrnetio w/ atmega644p (optiboot.c)
build.mcu=atmega644p
build.f_cpu=16000000L
build.core=avrnetio
build.variant=avrnetio
upload.protocol=arduino
upload.maximum_size=64512
upload.speed=115200
bootloader.path=optiboot
bootloader.file=optiboot_anio644p.hex
bootloader.low_fuses=0xFF
bootloader.high_fuses=0xDE
bootloader.extended_fuses=0xFD
bootloader.unlock_bits=0x0f
bootloader.lock_bits=0x3f
runtime.ide.path=C:\Program Files (x86)\Arduino
runtime.os=windows
build.system.path=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr\system
runtime.ide.version=10805
target_package=avrnetio
target_platform=avr
runtime.hardware.path=C:\Program Files (x86)\Arduino\hardware\avrnetio
originalid=avrnetio_avr_anio644p
intellisense.tools.path={runtime.tools.avr-gcc.path}\
intellisense.include.paths={intellisense.tools.path}avr\include;{intellisense.tools.path}avr\include\avr;{intellisense.tools.path}lib\gcc\avr\4.8.1\include;{intellisense.tools.path}lib\gcc\avr\4.9.2\include;{intellisense.tools.path}lib\gcc\avr\4.9.3\include;
tools.atprogram.cmd.path=%AVRSTUDIO_EXE_PATH%\atbackend\atprogram
tools.atprogram.cmd.setwinpath=true
tools.atprogram.program.params.verbose=-v
tools.atprogram.program.params.quiet=-q
tools.atprogram.program.pattern="{cmd.path}" -d {build.mcu} {program.verbose} {program.extra_params} program -c -f "{build.path}\{build.project_name}.hex"
tools.atprogram.program.xpattern="{cmd.path}" {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f "{build.path}\{build.project_name}.hex"
tools.atprogram.erase.params.verbose=-v
tools.atprogram.erase.params.quiet=-q
tools.atprogram.bootloader.params.verbose=-v
tools.atprogram.bootloader.params.quiet=-q
tools.atprogram.bootloader.pattern="{cmd.path}" -d {build.mcu} {bootloader.verbose}  program -c -f "{runtime.ide.path}\hardware\arduino\avr\bootloaders\{bootloader.file}"
vm.platform.root.path=C:\Program Files (x86)\Atmel\Studio\7.0\Extensions\uyaxdra5.21x\Micro Platforms\arduino16x
version=1.6.20
compiler.warning_flags=-w
compiler.warning_flags.none=-w
compiler.warning_flags.default=
compiler.warning_flags.more=-Wall
compiler.warning_flags.all=-Wall -Wextra
compiler.path={runtime.tools.avr-gcc.path}/bin/
compiler.c.cmd=avr-gcc
compiler.c.flags=-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects
compiler.c.elf.flags={compiler.warning_flags} -Os -g -flto -fuse-linker-plugin -Wl,--gc-sections
compiler.c.elf.cmd=avr-gcc
compiler.S.flags=-c -g -x assembler-with-cpp -flto -MMD
compiler.cpp.cmd=avr-g++
compiler.cpp.flags=-c -g -Os {compiler.warning_flags} -std=gnu++11 -fpermissive -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD -flto
compiler.ar.cmd=avr-gcc-ar
compiler.ar.flags=rcs
compiler.objcopy.cmd=avr-objcopy
compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0
compiler.elf2hex.flags=-O ihex -R .eeprom
compiler.elf2hex.cmd=avr-objcopy
compiler.ldflags=
compiler.size.cmd=avr-size
build.extra_flags=
compiler.c.extra_flags=
compiler.c.elf.extra_flags=
compiler.S.extra_flags=
compiler.cpp.extra_flags=
compiler.ar.extra_flags=
compiler.objcopy.eep.extra_flags=
compiler.elf2hex.extra_flags=
recipe.c.o.pattern="{compiler.path}{compiler.c.cmd}" {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"
recipe.cpp.o.pattern="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"
recipe.S.o.pattern="{compiler.path}{compiler.c.cmd}" {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"
archive_file_path={build.path}/{archive_file}
recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}" {compiler.ar.flags} {compiler.ar.extra_flags} "{archive_file_path}" "{object_file}"
recipe.c.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o "{build.path}/{build.project_name}.elf" {object_files} "{build.path}/{archive_file}" "-L{build.path}" -lm
recipe.objcopy.eep.pattern="{compiler.path}{compiler.objcopy.cmd}" {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.eep"
recipe.objcopy.hex.pattern="{compiler.path}{compiler.elf2hex.cmd}" {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"
recipe.output.tmp_file={build.project_name}.hex
recipe.output.save_file={build.project_name}.{build.variant}.hex
recipe.size.pattern="{compiler.path}{compiler.size.cmd}" -A "{build.path}/{build.project_name}.elf"
recipe.size.regex=^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*
recipe.size.regex.data=^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*
recipe.size.regex.eeprom=^(?:\.eeprom)\s+([0-9]+).*
preproc.includes.flags=-w -x c++ -M -MG -MP
recipe.preproc.includes="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}"
preproc.macros.flags=-w -x c++ -E -CC
recipe.preproc.macros="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{preprocessed_file_path}"
tools.avrdude.path={runtime.tools.avrdude.path}
tools.avrdude.cmd.path={path}/bin/avrdude
tools.avrdude.config.path={path}/etc/avrdude.conf
tools.avrdude.network_cmd={runtime.tools.arduinoOTA.path}/bin/arduinoOTA
tools.avrdude.upload.params.verbose=-v
tools.avrdude.upload.params.quiet=-q -q
tools.avrdude.upload.verify=
tools.avrdude.upload.params.noverify=-V
tools.avrdude.upload.pattern="{cmd.path}" "-C{config.path}" {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} "-P{serial.port}" -b{upload.speed} -D "-Uflash:w:{build.path}/{build.project_name}.hex:i"
tools.avrdude.program.params.verbose=-v
tools.avrdude.program.params.quiet=-q -q
tools.avrdude.program.verify=
tools.avrdude.program.params.noverify=-V
tools.avrdude.program.pattern="{cmd.path}" "-C{config.path}" {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} "-Uflash:w:{build.path}/{build.project_name}.hex:i"
tools.avrdude.erase.params.verbose=-v
tools.avrdude.erase.params.quiet=-q -q
tools.avrdude.erase.pattern="{cmd.path}" "-C{config.path}" {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m
tools.avrdude.bootloader.params.verbose=-v
tools.avrdude.bootloader.params.quiet=-q -q
tools.avrdude.bootloader.pattern="{cmd.path}" "-C{config.path}" {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} "-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i" -Ulock:w:{bootloader.lock_bits}:m
tools.avrdude_remote.upload.pattern=/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}
tools.avrdude.upload.network_pattern="{network_cmd}" -address {serial.port} -port {upload.network.port} -sketch "{build.path}/{build.project_name}.hex" -upload {upload.network.endpoint_upload} -sync {upload.network.endpoint_sync} -reset {upload.network.endpoint_reset} -sync_exp {upload.network.sync_return}
build.usb_manufacturer="Unknown"
build.usb_flags=-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'
avrisp.name=AVR ISP
avrisp.communication=serial
avrisp.protocol=stk500v1
avrisp.program.protocol=stk500v1
avrisp.program.tool=avrdude
avrisp.program.extra_params=-P{serial.port}
avrispmkii.name=AVRISP mkII
avrispmkii.communication=usb
avrispmkii.protocol=stk500v2
avrispmkii.program.protocol=stk500v2
avrispmkii.program.tool=avrdude
avrispmkii.program.extra_params=-Pusb
usbtinyisp.name=USBtinyISP
usbtinyisp.protocol=usbtiny
usbtinyisp.program.tool=avrdude
usbtinyisp.program.extra_params=
arduinoisp.name=ArduinoISP
arduinoisp.protocol=arduinoisp
arduinoisp.program.tool=avrdude
arduinoisp.program.extra_params=
arduinoisporg.name=ArduinoISP.org
arduinoisporg.protocol=arduinoisporg
arduinoisporg.program.tool=avrdude
arduinoisporg.program.extra_params=
usbasp.name=USBasp
usbasp.communication=usb
usbasp.protocol=usbasp
usbasp.program.protocol=usbasp
usbasp.program.tool=avrdude
usbasp.program.extra_params=-Pusb
parallel.name=Parallel Programmer
parallel.protocol=dapa
parallel.force=true
parallel.program.tool=avrdude
parallel.program.extra_params=-F
arduinoasisp.name=Arduino as ISP
arduinoasisp.communication=serial
arduinoasisp.protocol=stk500v1
arduinoasisp.speed=19200
arduinoasisp.program.protocol=stk500v1
arduinoasisp.program.speed=19200
arduinoasisp.program.tool=avrdude
arduinoasisp.program.extra_params=-P{serial.port} -b{program.speed}
usbGemma.name=Arduino Gemma
usbGemma.protocol=arduinogemma
usbGemma.program.tool=avrdude
usbGemma.program.extra_params=
usbGemma.config.path={runtime.platform.path}/bootloaders/gemma/avrdude.conf
buspirate.name=BusPirate as ISP
buspirate.communication=serial
buspirate.protocol=buspirate
buspirate.program.protocol=buspirate
buspirate.program.tool=avrdude
buspirate.program.extra_params=-P{serial.port}
stk500.name=Atmel STK500 development board
stk500.communication=serial
stk500.protocol=stk500
stk500.program.protocol=stk500
stk500.program.tool=avrdude
stk500.program.extra_params=-P{serial.port}
jtag3isp.name=Atmel JTAGICE3 (ISP mode)
jtag3isp.communication=usb
jtag3isp.protocol=jtag3isp
jtag3isp.program.protocol=jtag3isp
jtag3isp.program.tool=avrdude
jtag3isp.program.extra_params=
jtag3.name=Atmel JTAGICE3 (JTAG mode)
jtag3.communication=usb
jtag3.protocol=jtag3
jtag3.program.protocol=jtag3
jtag3.program.tool=avrdude
jtag3.program.extra_params=-B0.1
atmel_ice.name=Atmel-ICE (AVR)
atmel_ice.communication=usb
atmel_ice.protocol=atmelice_isp
atmel_ice.program.protocol=atmelice_isp
atmel_ice.program.tool=avrdude
atmel_ice.program.extra_params=-Pusb
runtime.tools.arduinoOTA.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.arduinoOTA-1.1.1.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.avrdude.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.avrdude-6.3.0-arduino9.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.avr-gcc.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.avr-gcc-4.9.2-atmel3.5.4-arduino2.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.esptool.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\esptool\0.4.9
runtime.tools.esptool-0.4.9.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\esptool\0.4.9
runtime.tools.mkspiffs.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\mkspiffs\0.1.2
runtime.tools.mkspiffs-0.1.2.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\mkspiffs\0.1.2
runtime.tools.tools-avr.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
runtime.tools.xtensa-lx106-elf-gcc.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2
runtime.tools.xtensa-lx106-elf-gcc-1.20.0-26-gb404fb9-2.path=C:\Users\Serg\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2
runtime.vm.boardinfo.id=avrnetio_avrnetio_avr_anio644p
runtime.vm.boardinfo.name=avrnetio_avrnetio_avr_anio644p
runtime.vm.boardinfo.desc=avrnetio w/ atmega644p (optiboot.c)
runtime.vm.boardinfo.src_location=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr
ide.hint=Use installed IDE. Provides built-in hardware, reference/help and libraries.
ide.location.key=Arduino16x
ide.location.ide.winreg=Arduino 1.6.x Application
ide.location.sketchbook.winreg=Arduino 1.6.x Sketchbook
ide.location.sketchbook.preferences=sketchbook.path
ide.default.revision_name=1.9.0
ide.default.version=10800
ide.default.package=arduino
ide.default.platform=avr
ide.multiplatform=true
ide.includes=Arduino.h
ide.exe_name=arduino
ide.recipe.preproc.defines.flags=-w -x c++ -E -dM
ide.platformswithoutpackage=false
ide.includes.fallback=wprogram.h
ide.extension=ino
ide.extension.fallback=pde
ide.versionGTEQ=160
ide.exe=arduino.exe
ide.builder.exe=arduinobuilder.exe
ide.builder.name=Arduino Builder
ide.hosts=atmel
ide.url=http://arduino.cc/en/Main/Software
ide.help.reference.path=reference
ide.help.reference.path2=reference\www.arduino.cc\en\Reference
ide.help.reference.serial=reference\www.arduino.cc\en\Serial
ide.location.preferences.portable={runtime.ide.path}\portable
ide.location.preferences.arduinoData={runtime.sketchbook.path}\ArduinoData
ide.location.preferences=%VM_APPDATA_LOCAL%\arduino15\preferences.txt
ide.location.preferences_fallback=%VM_APPDATA_ROAMING%\arduino15\preferences.txt
ide.location.contributions=%VM_APPDATA_LOCAL%\arduino15
ide.location.contributions_fallback=%VM_APPDATA_ROAMING%\arduino15
ide.contributions.boards.allow=true
ide.contributions.boards.ignore_unless_rewrite_found=true
ide.contributions.libraries.allow=true
ide.contributions.boards.support.urls.wiki=https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls
ide.create_platforms_from_boardsTXT.teensy=build.core
vm.debug=true
software=ARDUINO
ssh.user.name=root
ssh.user.default.password=arduino
ssh.host.wwwfiles.path=/www/sd
build.working_directory={runtime.ide.path}\java\bin
ide.appid=arduino16x
location.sketchbook=C:\Users\Serg\Documents\Arduino
build.core.path=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr\cores\avrnetio
vm.core.include=arduino.h
build.board=AVR_AVRNETIO_AVRNETIO_AVR_ANIO644P
vm.boardsource.path=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr
runtime.platform.path=C:\Program Files (x86)\Arduino\hardware\avrnetio\avr
vm.platformname.name=avr
build.arch=AVR
build.project_name=Mini_CNC_Arduino_Plotter.ino
build.project_path=D:\ProgrammWork\AVR_1\MiniPlotter\Mini_CNC_Arduino_Plotter\Mini_CNC_Arduino_Plotter
sketch_path=D:\ProgrammWork\AVR_1\MiniPlotter\Mini_CNC_Arduino_Plotter\Mini_CNC_Arduino_Plotter
ProjectDir=D:\ProgrammWork\AVR_1\MiniPlotter\Mini_CNC_Arduino_Plotter\Mini_CNC_Arduino_Plotter\
build.path=C:\Users\Serg\AppData\Local\Temp\VMBuilds\Mini_CNC_Arduino_Plotter\yun\Release
builder.noino=false
build.architecture=avr
vmresolved.compiler.path=C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\
vmresolved.tools.path=C:\Program Files (x86)\Arduino\hardware\tools\avr
</arduino.board.property_bag>
        <arduino.build.mcu>atmega644p</arduino.build.mcu>
        <arduino.build.f_cpu>16000000L</arduino.build.f_cpu>
        <arduino.build.core>avrnetio</arduino.build.core>
        <arduino.upload.protocol>arduino</arduino.upload.protocol>
        <arduino.upload.speed>115200</arduino.upload.speed>
        <arduino.upload.maximum_size>64512</arduino.upload.maximum_size>
        <visualmicro.application.name>arduino16x</visualmicro.application.name>
        <visualmicro.package.name>avrnetio</visualmicro.package.name>
        <visualmicro.platform.name>avr</visualmicro.platform.name>
        <arduino.upload.port>COM6</arduino.upload.port>
        <vm.programmer_name>usbasp</vm.programmer_name>
        <vm.upload.useprogrammer>1</vm.upload.useprogrammer>
      </VisualMicroSettings>
    </VisualMicroSettings>
  </PropertyGroup>
  <ItemGroup>
    <None Include="Mini_CNC_Arduino_Plotter.ino">
      <SubType>compile</SubType>
    </None>
    <None Include="src\_micro-api\libraries\Servo\keywords.txt">
      <SubType>compile</SubType>
    </None>
    <None Include="src\_micro-api\libraries\Stepper\keywords.txt">
      <SubType>compile</SubType>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="src\" />
    <Folder Include="src\_micro-api-readonly\" />
    <Folder Include="src\_micro-api-readonly\core\" />
    <Folder Include="src\_micro-api-readonly\core\avr-libc\" />
    <Folder Include="src\_micro-api-readonly\libraries\" />
    <Folder Include="src\_micro-api-readonly\variants\" />
    <Folder Include="src\_micro-api-readonly\variants\avrnetio\" />
    <Folder Include="src\_micro-api\" />
    <Folder Include="src\_micro-api\libraries\" />
    <Folder Include="src\_micro-api\libraries\Servo\" />
    <Folder Include="src\_micro-api\libraries\Stepper\" />
    <Folder Include="__vm\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\abi.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\abi.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Arduino.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Arduino.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\avr-libc\malloc.c">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\avr-libc\malloc.c</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\avr-libc\realloc.c">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\avr-libc\realloc.c</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\avr-libc\sectionname.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\avr-libc\sectionname.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\avr-libc\stdlib_private.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\avr-libc\stdlib_private.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\binary.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\binary.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\CDC.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\CDC.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Client.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Client.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\HardwareSerial.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\HardwareSerial.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\HardwareSerial.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\HardwareSerial.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\HardwareSerial0.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\HardwareSerial0.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\HardwareSerial1.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\HardwareSerial1.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\HardwareSerial2.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\HardwareSerial2.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\HardwareSerial3.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\HardwareSerial3.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\HardwareSerial_private.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\HardwareSerial_private.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\HID.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\HID.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\hooks.c">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\hooks.c</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\IPAddress.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\IPAddress.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\IPAddress.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\IPAddress.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\main.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\main.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\new.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\new.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\new.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\new.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Platform.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Platform.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\PluggableUSB.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\PluggableUSB.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\PluggableUSB.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\PluggableUSB.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Print.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Print.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Print.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Print.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Printable.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Printable.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Server.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Server.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Stream.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Stream.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Stream.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Stream.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Tone.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Tone.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\Udp.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\Udp.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\USBAPI.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\USBAPI.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\USBCore.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\USBCore.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\USBCore.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\USBCore.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\USBDesc.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\USBDesc.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\WCharacter.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\WCharacter.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\WInterrupts.c">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\WInterrupts.c</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\wiring.c">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\wiring.c</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\wiring_analog.c">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\wiring_analog.c</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\wiring_digital.c">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\wiring_digital.c</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\wiring_private.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\wiring_private.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\wiring_pulse.c">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\wiring_pulse.c</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\wiring_shift.c">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\wiring_shift.c</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\WMath.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\WMath.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\WString.cpp">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\WString.cpp</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\cores\avrnetio\WString.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\core\WString.h</Link>
    </Compile>
    <Compile Include="C:\Program Files %28x86%29\Arduino\hardware\avrnetio\avr\variants\avrnetio\pins_arduino.h">
      <SubType>compile</SubType>
      <Link>src\_micro-api-readonly\variants\avrnetio\pins_arduino.h</Link>
    </Compile>
    <Compile Include="Funct.cpp">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="Funct.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="src\_micro-api\libraries\Servo\Servo.cpp">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="src\_micro-api\libraries\Servo\Servo.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="src\_micro-api\libraries\Stepper\Stepper.cpp">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="src\_micro-api\libraries\Stepper\Stepper.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="__vm\.Mini_CNC_Arduino_Plotter.vsarduino.h">
      <SubType>compile</SubType>
    </Compile>
  </ItemGroup>
  <Import Project="$(AVRSTUDIO_EXE_PATH)\\Vs\\Compiler.targets" />
</Project>